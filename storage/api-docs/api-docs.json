{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel OpenApi Demo Documentation",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Register new user",
                "description": "Returns token for new user",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/publishers": {
            "get": {
                "tags": [
                    "publishers"
                ],
                "summary": "Get list of publishers",
                "description": "Returns list of publishers",
                "operationId": "getpublishersList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublisherResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "publishers"
                ],
                "summary": "Store new publisher",
                "description": "Returns publisher data",
                "operationId": "storePublisher",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePublisherRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublisherResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/publishers/{id}": {
            "get": {
                "tags": [
                    "publishers"
                ],
                "summary": "Get publisher information",
                "description": "Returns publisher data",
                "operationId": "getPublisherById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Publisher id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublisherResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "publishers"
                ],
                "summary": "Update existing publisher",
                "description": "Returns updated publisher data",
                "operationId": "updatePublisher",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Publisher id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePublisherRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublisherResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "publishers"
                ],
                "summary": "Delete existing publisher",
                "description": "Deletes a record and returns no content",
                "operationId": "deletePublisher",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Publisher id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "email_verified_at": {
                        "title": "Email verified at",
                        "description": "Email verified at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "PublisherResource": {
                "title": "PublisherResource",
                "description": "Publisher resource",
                "properties": {
                    "publisher": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "ref": null
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PublisherResource"
                }
            },
            "RegisterUserRequest": {
                "title": "Register User request",
                "description": "Register User request body data",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "description": "Name of the new user",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "Email of the new user",
                        "type": "string",
                        "example": "example@example.com"
                    },
                    "password": {
                        "description": "Password of the new user",
                        "type": "string",
                        "example": "123456"
                    }
                },
                "type": "object"
            },
            "StorePublisherRequest": {
                "title": "Store Publisher request",
                "description": "Store Publisher request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new publisher",
                        "type": "string",
                        "example": "A nice publisher"
                    }
                },
                "type": "object"
            },
            "UpdatePublisherRequest": {
                "title": "Update Publisher request",
                "description": "Update Publisher request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new publisher",
                        "type": "string",
                        "example": "A nice publisher"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Authentication",
                "description": "User resource",
                "properties": {
                    "id": {
                        "description": "User id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "User name",
                        "type": "string"
                    },
                    "email": {
                        "description": "User email",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "User creation date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "User updated date",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserResource"
                }
            }
        },
        "securitySchemes": {
            "bearer_token": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Projects",
            "description": "API Endpoints of Projects"
        }
    ],
    "security": [
        {
            "bearer_token": []
        }
    ]
}